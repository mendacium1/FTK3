1.)
  a) alle Zahlen von 1-32 wo gcd=1 (* nimmt null aus), das heißt 20 Zahlen
  b) Ja, 20, über phi(n)
  c) si.euler_phi(29)=28
  29 is prim deshalb 29-1
  d) si.euler_phi(77)=60
  prime_factors: 7,11
  euler_phi = 77 * (1-1/7) * (1-1/11) = 60
  e) si.euler_phi(125)=100
  prime_factors: 5,5,5 //nur eine 5 nehmen
  euler_phi = 125 * (1-1/5)
  f) si.euler_phi(6469693230)=1021870080
  python -c "import si;print(si.euler_phi(6469693230))"

  g) si.euler_phi(7922124000)=1807142400
  python -c "import si;print(si.euler_phi(7922124000))"

--------------------------------------------------------
2.)
  n = 9788741= p * q
  euler_phi(n) = 9782412

  Bekannte Formel:
  euler_phi( p * q ) = p * q - (p + q - 1)

  Zwei Funktionen -> Gleichungssystem
  Wolfram alpha:
  9782412=p * q - (p + q - 1); 9788741= p * q
  p = 2687, q = 3643

--------------------------------------------------------
3.)
  a.)
  12345^(1234) mod 131
  phi(131) = 130
  1234 mod 130 = 64
  12345 mod 131 = 31

  12345^(1234) = 31^(64) mod 131
  (31^(64) mod 131) mod 131 = 38

  square and multiply:
  31^(1) mod 131 = 31
  31^(2) mod 131 = 44
  31^(4) mod 131 = 44^(2) mod 131 = 102
  31^(8) mod 131 = 102^(2) mod 131 = 55
  31^(16) mod 131 = 55^(2) mod 131 = 12
  31^(32) mod 131 = 12^(2) mod 131 = 13
  31^(64) mod 131 = 13^(2) mod 131 = 38 <---

  b)
  987654321^(87654321) mod 841
  phi(841) = 812
  87654321 mod 812 = 545
  987654321 mod 841 = 741

  987654321^(87654321) = 45^(545) mod 841
  
  bin(545) = 10001000001

  square and multiply:
1 741^(1) mod 841 = 741
0 741^(2) mod 841 = 741^(2) mod 841 = 749
0 741^(4) mod 841 = 749^(2) mod 841 = 54
0 741^(8) mod 841 = 54^(2) mod 841 = 393
0 741^(16) mod 841 = 393^(2) mod 841 = 546
1 741^(32) mod 841 = 546^(2) mod 841 = 402
0 741^(64) mod 841 = 402^(2) mod 841 = 132
0 741^(128) mod 841 = 132^(2) mod 841 = 604
0 741^(256) mod 841 = 604^(2) mod 841 = 663
1 741^(512) mod 841 = 663^(2) mod 841 = 567

  741^(545) mod 841 = 741*402*567 mod 841 = 223

  c)
  1354^(1231) mod 667
  phi(667) = 616
  1231 mod 616 = 615
  1354 mod 667 = 20

  1354^(1231) mod 667 = 20^(615) mod 667
  bin(615) = 1001100111

1 20^(1) mod 667 = 20
0 20^(2) mod 667 = 20^(2) mod 667 = 400
0 20^(4) mod 667 = 400^(2) mod 667 = 587
1 20^(8) mod 667 = 587^(2) mod 667 = 397
1 20^(16) mod 667 = 397^(2) mod 667 = 197
0 20^(32) mod 667 = 197^(2) mod 667 = 123
0 20^(64) mod 667 = 123^(2) mod 667 = 455
1 20^(128) mod 667 = 455^(2) mod 667 = 255
1 20^(256) mod 667 = 255^(2) mod 667 = 326
1 20^(512) mod 667 = 326^(2) mod 667 = 223

(20*397*197*255*326*223) % 667 = 500
  


--------------------------------------------------------
4.)
  x = 45 mod 79
  x = 49 mod 89
  python -c "import si;print(si.chinese_remainder([79,89],[45,49])))"
  x = 4232

  händisch:
  z1 = 45
  z2 = 49
  n1 = 79
  n2 = 89

  n = n1 * n2 = 79 * 89 = 7031
  q1 = n/n1 = 7031/79 = 89
  q2 = n/n2 = 7031/89 = 79

  r1 = q1^(-1) mod n1 = 89^(-1) mod 79 = 8
  r2 = q2^(-1) mod n2 = 79^(-1) mod 89 = 80

  z = (z1 * q1 * r1) + (z2 * q2 * r2) mod n
  z = (45 * 89 * 8) + (49 * 79 * 80) mod 7031
  z = 4232


--------------------------------------------------------
5.)
  x = 4 mod 23
  x = 6 mod 21
  x = 10 mod 20
  python -c "import si;print(si.chinese_remainder([23,21,20],[4,6,10]))"
  x = 510

  z1 = 4
  z2 = 6
  z3 = 10
  n1 = 23
  n2 = 21
  n3 = 20


  n = n1 * n2 * n3 = 23 * 21 * 20 = 9660
  q1 = n/n1 = 9660/ 23 = 420
  q2 = n/n2 = 9660/ 21 = 460
  q3 = n/n3 = 9660/ 20 = 483

  r1 = q1^(-1) mod n1 = 420^(-1) mod 23 = 4
  r2 = q2^(-1) mod n2 = 460^(-1) mod 21 = 10
  r3 = q3^(-1) mod n3 = 483^(-1) mod 20 = 7

  z = (z1 * q1 * r1) + (z2 * q2 * r2) + (z3 + q3 * r3) mod n
  z = (4 * 420 * 4) + (6 * 460 * 10) + (10 * 483 * 7) mod 9660
  z = 510


--------------------------------------------------------
6.)
RSA-CRS
c = 1969
p = 47
q = 53
d = 2153


d_p = 2153 mod 46 = 37
d_q = 2153 mod 53 = 33

Erweiter Euklid von p & q:
'                 53   47
'            53    1    0
'            47    0    1    1
'             6    1   -1    7
'             5   -7    8    1
'             1    8   -9    5
(1, -9, 8)
q*y + p*x = 1
(53 * 8) - (47 * 9) = 1
y = 8


m_p := c^(d_p) mod p
m_p = 1969^(33) mod 57 = 37


m_q := c^(d_q) mod q
m_q = 1969^(37) mod 47 = 27


h := (m_p - m_q) * y mod p
h = (37 - 27) * 8 mod 47 = 33

m := m_q + q*h mod p*q
m = 27 + 53*33 mod (57 * 47)

m = 1776

--------------------------------------------------------
7.)

--------------------------------------------------------
8.)
